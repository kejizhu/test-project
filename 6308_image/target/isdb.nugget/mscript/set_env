# <- this is for comment / total file size must be less than 4KB
dynpart edb64M-nand:0x500000(UBIRO),0x600000(KL),0x5600000(UBI),0x3C00000(MSLIB),0x1E00000(APP),0x80000(RTPM),0x400000(tee),-(NA)
#dynpart edb64M-nand:0x40000(NPT),0x40000(KL_BP),0x500000(KL),0xCC00000(UBI),-(NA)
ubi part UBIRO
ubi part UBI
#setenv MS_MEM LX_MEM=0x2000000 EMAC_MEM=0x100000 DRAM_LEN=0x20000000 LX_MEM2=0x65F81000,0x8000000 BB_ADDR=0xDFFF000
setenv MS_MEM LX_MEM=0xAAEA000 EMAC_MEM=0x28000 DRAM_LEN=0x18000000 LX_MEM2=0x60080000,0x4380000 BB_ADDR=0xE973000 PM51_ADDR=0xFFF0000 PM51_LEN=0x10000
setenv sync_mmap 1
setenv JPEG_MEM JPD_READBUFF_ADR=0xE973000 JPD_INTERBUFF_ADR=0xE9C4000 JPD_OUT_ADR=0xEFF4000
setenv AUDIO_MEM AUDIO_S_MEM_INFO_ADR=0xAB12000 AUDIO_D_MEM_INFO_ADR=0xABD2000
setenv GOP_MEM GOP_BUFFER_ADDR=0x64400000
setenv GOP_SET_MUX 2:1:3:0
setenv DynMmapID E_DFB_JPD_INTERNAL
setenv MS_RFS ubi.mtd=UBI ubi.mtd=UBIRO ubi.mtd=UBILD root=ubi0:RFS rootfstype=ubifs ro
#setenv MS_RFS ubi.mtd=4,2048 ubi.mtd=2,2048 root=ubi:RFS rootfstype=ubifs ro
#setenv MS_RFS ubi.mtd=3,2048 root=ubi:RFS rootfstype=ubifs ro
setenv bootargs console=ttyS0,115200 $(MS_RFS) $(MS_MEM) $(mtdparts) CLOSE_BOOTLOGO bootlogo_dfblayer=2 delaylogo=true
setenv bootlogo_buffer E_DFB_JPD_INTERNAL
setenv bootlogo_gopidx 1
setenv verify y
setenv bootcmd $(LOAD_KERNEL) $(AUTHENTICATE_KL) $(LOAD_NUTTX) $(BOOT_NUTTX) \; $(BOOT_KERNEL)
#setenv bootcmd nand read.e 83FFFFC0 KL $(filesize)\; bootm 83FFFFC0
setenv LOAD_KERNEL nand read.e 803FFFC0 KL 0x600000\;
setenv BOOT_KERNEL bootm 803FFFC0\;
setenv AUTHENTICATE_KL authenticate KL 803FFFC0\;
setenv MIU0_GROUP_PRIORITY 1:0:2:3
setenv MIU1_GROUP_PRIORITY 1:0:2:3
setenv MIU0_GROUP_SELMIU 0000:00F0:0000:0001
#MIU0_GROUP_SELMIU 0000:01E0:0000:0000
setenv MIU1_GROUP_SELMIU 4000:0000:0400:0800
setenv mboot_default_env 0
saveenv
printenv
reset
% <- this is end of file symbol
